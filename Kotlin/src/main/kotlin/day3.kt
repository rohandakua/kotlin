fun main(){
    // array
    var a :Array<Int> = arrayOf(2,3,4,5,6 )         // arrayOf is necessary , variable can be of both the types
    var b = arrayOf("ro","pu","fds")
    // array can store multiple type of data in a single array
    var c = arrayOf("rohan",3,45,56,'v')    // multiple type of data in a single array

    // you can customise your loop
    for(i in c ){
        if (i is Int ){
            println(i)  // this will print the int data types in the c orderly
        }
    }

    // OOPS

    var b1=bike()                // instantiation      i.e. creating a instance of the class
    b1.cc=999
    b1.topSpeed=342
    b1.name="ninja zx10r"
    b1.company="kawasaki"

        // .trim     it removes all the spaces from the beginning and from the last
}
class bike{
    var name=""
    var cc=0
    var company=""
    var topSpeed=0

    fun top(){
        println("the top speed of the $name is $topSpeed")
    }

    fun ccInfo(){
        println("the engine capacity of the $name is $cc")
    }
}
// defining the use of init and this
class school(name:String , var student :Int , var teacher:Int , room :Int){          // this is the primary constructor
    // getters and setters
    //     this get and sets the value of the data members , auto generated by the compiler and also can be user defined

    var room = room                       // getter and setter should be set immediately
        get(){
            println("the getter is running ")
            return field         // field is use instead of room bcs then it will call the setter again and it be a infinite loop
        }set(value){
        field=value
    }
    var name:String  // this is the name variable that is in this class
    init{                                                   // initialisation block
        if(name.lowercase().startsWith("a")){           // this will check if the school's name start with a
            this.name=name                                // this.name refers to the var that is introduced within the class
        }else{
            this.name="user"
        }
    }
    // secondary constructor
    constructor(name:String): this(name , 45,10 , 3){        // secondary constructor should always call the primary constructor
        // some code if you want
    }



}

